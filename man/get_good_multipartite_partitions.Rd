% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimating_blocks_functions.R
\name{get_good_multipartite_partitions}
\alias{get_good_multipartite_partitions}
\title{get_good_multipartite_partitions}
\usage{
get_good_multipartite_partitions(repeat_result, max_iter = 100)
}
\arguments{
\item{repeat_result}{A list containing the results from `repeat_sample_likely_multipartite_partition`.}

\item{max_iter}{The maximum number of iterations to perform for each partition.}
}
\value{
A list containing the number of unique partitions, all fits, the best partition,
and the best fit.
}
\description{
Get good multipartite partitions from the results of `repeat_sample_likely_multipartite_partition`.
This function calculates the log-linear model for each partition,
repeats the multipartite partition update until no improvement is found,
and returns the best partition and its fit.
}
\examples{
# Create a square matrix with 40 rows and 40 columns
mat_aa <- matrix(rpois(1600, lambda = 10), nrow = 40, ncol = 40)
# Create a square matrix with 40 rows and 40 columns
mat_ab <- matrix(rpois(1600, lambda = 10), nrow = 40, ncol = 40)
# Create a square matrix with 40 rows and 40 columns
mat_bb <- matrix(rpois(1600, lambda = 10), nrow = 40, ncol = 40)
# Repeat sampling a likely multipartite partition of the matrices with 2 blocks
# for (a) and 3 blocks for (b) for 10 runs
repeat_result <- repeat_sample_likely_multipartite_partition(mat_aa, mat_ab, mat_bb,
n_blocks = c(2, 3), n_runs = 10, n_iter = 1000)
# Get good multipartite partitions from the repeat result
get_good_multipartite_partitions(repeat_result, max_iter = 100)
}
