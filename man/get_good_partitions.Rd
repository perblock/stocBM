% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimating_blocks_functions.R
\name{get_good_partitions}
\alias{get_good_partitions}
\title{get_good_partitions}
\usage{
get_good_partitions(repeat_result, max_iter = 100)
}
\arguments{
\item{repeat_result}{A list containing the results from `repeat_sample_likely_partition`.}

\item{max_iter}{The maximum number of iterations to perform for each partition.}
}
\value{
A list containing the number of unique partitions, all fits, the best partition,
and the best fit.
}
\description{
Get good partitions from the results of `repeat_sample_likely_partition`.
This function calculates the log-linear model for each partition,
repeats the partition update until no improvement is found,
and returns the best partition and its fit.
}
\examples{
# Create a square matrix with 40 rows and 40 columns
test_mat <- matrix(rpois(1600, lambda = 10), nrow = 40, ncol = 40)
test_mat[1:15, 1:15] <- test_mat[1:15, 1:15] + 2  # Add some structure
test_mat[25:40, 16:24] <- test_mat[25:40, 16:24] + 5  # Add some structure
# Repeat sampling a likely partition of the matrix with 3 blocks for 10 runs
repeat_result <- repeat_sample_likely_partition(test_mat, n_blocks = 3, n_runs = 10, n_iter = 1000)
# Get good partitions from the repeat result
get_good_partitions(repeat_result, max_iter = 100)
}
