% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/partition_change_functions.R
\name{sample_likely_multipartite_partition}
\alias{sample_likely_multipartite_partition}
\title{sample_likely_multipartite_partition}
\usage{
sample_likely_multipartite_partition(
  table_aa,
  table_ab,
  table_bb,
  initial_partition = NULL,
  n_blocks = c(2, 2),
  n_iter = 1000
)
}
\arguments{
\item{table_aa}{A square matrix representing the mobility table
in which rows and columns are partitioned into the same blocks (a).}

\item{table_ab}{A square matrix representing the mobility table
in which rows are partitioned into blocks (a) and columns are partitioned
into different blocks (b).}

\item{table_bb}{A square matrix representing the mobility table
in which rows and columns are partitioned
into the same blocks (b).}

\item{initial_partition}{A list containing two vectors:
one for the partitioning of (a)
and one for the partitioning of (b).
If NULL, a random partition will be created.}

\item{n_blocks}{A vector of two numbers representing the number of
blocks for (a) and (b).}

\item{n_iter}{The number of iterations to run the sampling.}
}
\value{
A list containing the sampled partitions (a) and (b)
and the summed fit of the log-linear model for the three matrices.
}
\description{
Sample a likely multipartite partition of three square matrices
Use either propose_multipartite_partition_update_move or
propose_multipartite_partition_update_swap,
randomly for a specified number of iterations
and return the partition and the fit
}
\examples{
# Create a square matrix with 40 rows and 40 columns
mat_aa <- matrix(rpois(1600, lambda = 10), nrow = 40, ncol = 40)
# Create a square matrix with 40 rows and 40 columns
mat_ab <- matrix(rpois(1600, lambda = 10), nrow = 40, ncol = 40)
# Create a square matrix with 40 rows and 40 columns
mat_bb <- matrix(rpois(1600, lambda = 10), nrow = 40, ncol = 40)
# Sample a likely multipartite partition of the matrices with 2 blocks for (a) and 3 blocks for (b)
sample_likely_multipartite_partition(mat_aa, mat_ab, mat_bb,
n_blocks = c(2, 3), n_iter = 1000)
}
